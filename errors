requestEntries=\"{}\", statusCode=\"400\", serviceName=\"createCurrencyGroup\", 

4 errors: rpc error: code = Code(400) desc = parse error : stage '|~ "status\\\":500\\"' : error parsing regexp: trailing backslash at end of expression: ``; rpc error: code = Code(400) desc = parse error : stage '|~ "status\\\":500\\"' : error parsing regexp: trailing backslash at end of expression: ``; rpc error: code = Code(400) desc = parse error : stage '|~ "status\\\":500\\"' : error parsing regexp: trailing backslash at end of expression: ``; rpc error: code = Code(400) desc = parse error : stage '|~ "status\\\":500\\"' : error parsing regexp: trailing backslash at end of expression: ``

sum(count_over_time({namespace="sit", pod=~"rbicbis-cloud-deployment.*"} |~ `status\":500\` [5m]))

TechnicalFailureException: A technical error was encountered
{\"code\":\"COMMON_BAD_REQUEST\",\"severity\":\"ERROR\",\"message\":\"001 - scheme is not valid: required property 'mop' not found
status\":400

\"errorId\":\"6ad0e425-7dbb-43db-a163-a8a9e7c73ffb\",\"requestId\":\"f01991d3-93ea-44ea-b70c-e3f58757c01a\",\"correlationId\":\"f01991d3-93ea-44ea-b70c-e │
│ 3f58757c01a\",\,"status\":500\"reasons\":[{\"code\":\"INTERNAL_SERVER_ERROR\",\"severity\":\"ERROR\",\"message\":\"Query did not return a unique result: 2 results were returned\",\"path\":\"Query did not return a unique result: 2 results were returned\"}]

I have this type of errors






Using count_over_time with a label filter:
swift
Copy code
count_over_time({namespace="sit", pod=~"rbi.*"} |= "Internal_Server_Error" | label_format message="{{ if match \"Internal_Server_Error\" .message }}1{{ end }}" [5m])
Using sum_over_time with labels:
cpp
Run Code
Copy code
sum_over_time({namespace="sit", pod=~"rbi.*"} |= "Internal_Server_Error" | json | label_format uniqueId="{{.timestamp}}_{{.message}}" [5m])
Using group by timestamp:
vbnet
Copy code
sum by (timestamp) (count_over_time({namespace="sit", pod=~"rbi.*"} |= "Internal_Server_Error" [5m]))
To check your Loki version:

cpp
Run Code
Copy code
{namespace="sit"} | logfmt | __error__ != "" | line_format "{{.loki_version}}"
If you're using an older version, consider upgrading Loki to get access to newer features like uniq.





For these types of logs with status codes, you can extract and label them using LogQL pattern matching. Here are a few approaches:

Using json parser and status code:
java
Run Code
Copy code
sum by (status_code) (
  count_over_time({namespace="sit", pod=~"rbi.*"} 
    | json 
    | status = "400" or status = "500" 
    | label_format status_code="{{.status}}" [5m]
  )
)
Using regex to extract status codes:
vbnet
Copy code
sum by (status_code) (
  count_over_time({namespace="sit", pod=~"rbi.*"} 
    | regexp "status\":(?P<status_code>[45][0-9]{2})"
    [5m]
  )
)
Separate queries for different status codes:
csharp
Copy code
# For 400s
sum(count_over_time({namespace="sit", pod=~"rbi.*"} 
  |~ "status\":400" [5m]
)) by (namespace)

# For 500s
sum(count_over_time({namespace="sit", pod=~"rbi.*"} 
  |~ "status\":500" [5m]
)) by (namespace)
More complex parsing with multiple labels:
vbnet
Copy code
{namespace="sit", pod=~"rbi.*"}
| json
| status > 399
| label_format status_code="{{.status}}"
| label_format error_code="{{.code}}"
| count_over_time([5m])
| sum by (status_code, error_code)
Using pattern matching for both error codes:
java
Run Code
Copy code
sum by (error_type) (
  count_over_time({namespace="sit", pod=~"rbi.*"} 
    | pattern "<_> status\":<status_code>" 
    | status_code in ("400", "500")
    [5m]
  )
)
In Grafana:

Create a panel
Use one of these queries
You can create multiple queries in the same panel to show different status codes
Use different visualizations (Time series, Bar gauge, etc.)
You can also add alerting based on these metrics
You might want to create separate panels for:

400 errors (Bad Requests)
500 errors (Internal Server Errors)
Error distribution by status code
Error trends over time
Remember to adjust the time window [5m] according to your needs.
