recommended config:

promtail:
  enabled: true
  config:
    logLevel: info
    serverPort: 3101
    clients:
      - url: http://prometheus-XXX-loki-gateway/loki/api/v1/push
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:        # This is the correct location
          - cri: {}
          - json:
              expressions:
                level: level
                timestamp: timestamp
                threadName: threadName
                loggerName: loggerName
                message: message
                requestId: requestId
                uuid: uuid
                code: code
                producer: producer
                url: url
                httpMethod: httpMethod
                statusCode: statusCode
                contentLength: contentLength
                severity: severity
          - regex:
              expression: '.*\[(?P<loglevel>INFO|WARN|WARNING|ERROR|DEBUG|SEVERE|FINEST|AUDIT|FINE)\s*\].*'
          - regex:
              expression: '.*"(?P<method>GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD) (?P<path>/[^"]*) HTTP/[0-9.]+" (?P<status_code>[0-9]{3})'
          - labels:
              level:
              statusCode:
              httpMethod:
              requestId:
              uuid:
              code:
              producer:
              severity:
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_phase]
            action: drop
            regex: "Succeeded|Failed"
  nodeSelector:
    kubernetes.io/os: linux


before:

promtail:
  enabled: true
  config:
    logLevel: info
    serverPort: 3101
    clients:
      - url: http://prometheus-XXX-loki-gateway/loki/api/v1/push
    scrape_configs:
      - job_name: kubernetes-pods
        pipeline_stages:
          - cri: {}
          - json:
              expressions:
                loglevel: loglevel
          - regex:
              expression: '.*\[(?P<loglevel>INFO|WARN|WARNING|ERROR|DEBUG|SEVERE|FINEST|AUDIT|FINE)\s*\].*'
          - regex:
              expression: '.*"(?P<method>GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD) (?P<path>/[^"]*) HTTP/[0-9.]+" (?P<status_code>[0-9]{3})'
          - labels:
              loglevel:
              method:
              path:
              status_code:
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_phase]
            action: drop
            regex: "Succeeded|Failed"
  nodeSelector:
    kubernetes.io/os: linux



curent my config


promtail:
  enabled: true
  config:
    logLevel: info
    serverPort: 3101
    clients:
      - url: http://prometheus-XXX-loki-gateway/loki/api/v1/push
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_phase]
            action: drop
            regex: "Succeeded|Failed"
    snippets:
      pipelineStages:
        - cri: {}
        - json:
            expressions:
              level: level
              timestamp: timestamp
              threadName: threadName
              loggerName: loggerName
              message: message
              requestId: requestId
              uuid: uuid
              code: code
              producer: producer
              url: url
              httpMethod: httpMethod
              statusCode: statusCode
              contentLength: contentLength
              severity: severity
        - regex:
            expression: '.*\[(?P<loglevel>INFO|WARN|WARNING|ERROR|DEBUG|SEVERE|FINEST|AUDIT|FINE)\s*\].*'
            expression: '.*\[(?P<loglevel>INFO|WARN|WARNING|ERROR|DEBUG|SEVERE|FINEST|AUDIT|FINE)\s*\].*'
        - regex:
            expression: '.*"(?P<method>GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD) (?P<path>/[^"]*) HTTP/[0-9.]+" (?P<status_code>[0-9]{3})'
        - labels:
            level:
            url:
            statusCode:
            httpMethod:
            requestId:
            uuid:
            code:
            producer:
            severity:
  nodeSelector:
    kubernetes.io/os: linux







You can find the official documentation for Promtail configuration in these places:

Official Grafana Helm Charts Documentation:
https://github.com/grafana/helm-charts/tree/main/charts/promtail

Specific Promtail Configuration Documentation:
https://grafana.com/docs/loki/latest/clients/promtail/configuration/

For Snippets configuration in Helm Charts:
https://github.com/grafana/helm-charts/blob/main/charts/promtail/values.yaml

In the values.yaml from the official repository, you can see the snippets configuration example:

yaml
Copy code
config:
  # -- Check https://grafana.com/docs/loki/latest/clients/promtail/configuration/#snippets
  snippets:
    pipelineStages: []
    extraRelabelConfigs: []
    extraScrapeConfigs: []
And for pipeline stages specific documentation:
https://grafana.com/docs/loki/latest/clients/promtail/stages/

This shows how to configure different types of parsing stages in Promtail, including the JSON and regex stages you're implementing.




promtail:
  enabled: true
  config:
    logLevel: info
    serverPort: 3101
    clients:
      - url: http://prometheus-XXX-loki-gateway/loki/api/v1/push
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - cri: {}
          - json:
              expressions:
                level: level
                timestamp: timestamp
                threadName: threadName
                loggerName: loggerName
                message: message
                requestId: requestId
                uuid: uuid
                code: code
                producer: producer
          - template:
              source: message
              template: '{{ .message }}'
          - regex:
              expression: '.*url="(?P<url>[^"]*)".*httpMethod="(?P<httpMethod>[^"]*)".*statusCode="(?P<statusCode>[^"]*)".*contentLength="(?P<contentLength>[^"]*)".*severity="(?P<severity>[^"]*)"'
          - labels:
              level:
              statusCode:
              httpMethod:
              requestId:
              uuid:
              code:
              producer:
              severity:
              url:
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_phase]
            action: drop
            regex: "Succeeded|Failed"
  nodeSelector:
    kubernetes.io/os: linux
