kube-prometheus-stack:
  prometheus:
    ingress:
      hosts:
        - prometheus.test.crisp.rbro.rbg.cc

  alertmanager:
    ingress:
      hosts:
        - alertmanager.test.crisp.rbro.rbg.cc

promtail:
  config:
    clients:
      - url: http://prometheus-test-loki-gateway/loki/api/v1/push

loki:
  gateway:
    ingress:
      hosts:
        - host: loki-gateway.test.crisp.rbro.rbg.cc
          paths:
            - path: /
              pathType: Prefix
  loki:
    rulerConfig:
      alertmanager_url: http://prometheus-test-alertmanager:9093

  # ruler:
    # directories: {}
      # fake: 
      #   rules1.txt: |
      #     groups:
      #       - name: should_fire
      #         rules:
      #           - alert: HighPercentageError
      #             expr: |
      #               sum(rate({app="foo", env="production"} |= "error" [5m])) by (job)
      #                 /
      #               sum(rate({app="foo", env="production"}[5m])) by (job)
      #                 > 0.05
      #             for: 10m
      #             labels:
      #               severity: warning
      #             annotations:
      #               summary: High error rate
      #       - name: credentials_leak
      #         rules:
      #           - alert: http-credentials-leaked
      #             annotations:
      #               message: "{{ $labels.job }} is leaking http basic auth credentials."
      #             expr: 'sum by (cluster, job, pod) (count_over_time({namespace="prod"} |~ "http(s?)://(\\w+):(\\w+)@" [5m]) > 0)'
      #             for: 10m
      #             labels:
      #               severity: critical
      #   rules2.txt: |
      #     groups:
      #       - name: example
      #         rules:
      #         - alert: HighThroughputLogStreams
      #           expr: sum by(container) (rate({job=~"loki-dev/.*"}[1m])) > 1000
      #           for: 2m
      # tenant_bar:
      #   rules1.txt: |
      #     groups:
      #       - name: should_fire
      #         rules:
      #           - alert: HighPercentageError
      #             expr: |
      #               sum(rate({app="foo", env="production"} |= "error" [5m])) by (job)
      #                 /
      #               sum(rate({app="foo", env="production"}[5m])) by (job)
      #                 > 0.05
      #             for: 10m
      #             labels:
      #               severity: warning
      #             annotations:
      #               summary: High error rate
      #       - name: credentials_leak
      #         rules:
      #           - alert: http-credentials-leaked
      #             annotations:
      #               message: "{{ $labels.job }} is leaking http basic auth credentials."
      #             expr: 'sum by (cluster, job, pod) (count_over_time({namespace="prod"} |~ "http(s?)://(\\w+):(\\w+)@" [5m]) > 0)'
      #             for: 10m
      #             labels:
      #               severity: critical
      #   rules2.txt: |
      #     groups:
      #       - name: example
      #         rules:
      #         - alert: HighThroughputLogStreams
      #           expr: sum by(container) (rate({job=~"loki-dev/.*"}[1m])) > 1000
      #           for: 2m